// Generated by CoffeeScript 1.9.3
(function() {
  var exports, mkchart, renderfiletab, renderfiletabdou, run00, run01, run1, run2, run3, run3_1, socket, split_tab, split_tab_dou;

  socket = io('http://localhost:8080');

  socket.on('log', function(data) {
    return $("#log").append("<li class='list-group-item'>" + data + "</li>");
  });

  socket.on('err', function(data) {
    return $("#log").append("<li class='list-group-item list-group-item-danger' >" + data + "</li>");
  });

  run00 = function() {
    var file1, groupname, homedir, jar, str;
    homedir = $("#homedir").val();
    groupname = $("#groupname").val();
    file1 = $("#prepro1").val();
    jar = $("#jar").val();
    str = "java -Xmx10g -jar " + jar + " 0 " + homedir + "/data/" + groupname + "/" + file1 + " " + homedir + "/data/" + groupname + "/temp/learn_0.csv";
    return socket.emit('runscript', str);
  };

  run01 = function() {
    var file2, groupname, homedir, jar, str;
    homedir = $("#homedir").val();
    groupname = $("#groupname").val();
    file2 = $("#prepro2").val();
    jar = $("#jar").val();
    str = "java -Xmx10g -jar " + jar + " 0 " + homedir + "/data/" + groupname + "/" + file2 + " " + homedir + "/data/" + groupname + "/temp/valid_0.csv";
    return socket.emit('runscript', str);
  };

  run1 = function() {
    var file1, file2, file3, file4, groupname, homedir, jar, str;
    file1 = 'learn_0.csv';
    file2 = 'learn_0_pheno.csv';
    file3 = 'valid_0.csv';
    file4 = 'valid_0_pheno.csv';
    jar = $("#jar").val();
    homedir = $("#homedir").val();
    groupname = $("#groupname").val();
    str = "java -Xmx10g -jar " + jar + " 1 true " + homedir + "/data/" + groupname + "/temp/" + file1 + " " + homedir + "/data/" + groupname + "/temp/" + file2 + " " + homedir + "/data/" + groupname + "/temp/" + file3 + " " + homedir + "/data/" + groupname + "/temp/" + file4;
    return socket.emit('runscript', str);
  };

  run2 = function() {
    var file1, file2, groupname, homedir, jar, str;
    file1 = 'training_01.arff';
    file2 = 'validation_01.arff';
    jar = $("#jar").val();
    homedir = $("#homedir").val();
    groupname = $("#groupname").val();
    str = "java -Xmx13g -jar " + jar + " 2 true 50000 4000 " + homedir + "/data/" + groupname + "/temp/" + file1 + " " + homedir + "/data/" + groupname + "/temp/" + file2;
    return socket.emit('runscript', str);
  };

  run3 = function() {
    var file1, file2, groupname, homedir, jar, str;
    file1 = 'training_01_PostBayesAttSel.arff';
    file2 = 'validation_01_PostBayesAttSel.arff"';
    jar = $("#jar").val();
    homedir = $("#homedir").val();
    groupname = $("#groupname").val();
    str = "java -Xmx10g -jar " + jar + " " + homedir + "/data/" + groupname + "/temp/" + file1 + " " + homedir + "/data/" + groupname + "/temp/" + file2;
    return socket.emit('runscript', str);
  };

  run3_1 = function() {
    var file1, file2, groupname, homedir, jar, str;
    file1 = 'a.arff';
    file2 = 'b.arff"';
    jar = $("#jar").val();
    homedir = $("#homedir").val();
    groupname = $("#groupname").val();
    str = "java -Xmx10g -jar " + jar + " " + homedir + "/data/" + groupname + "/temp/" + file1 + " " + homedir + "/data/" + groupname + "/temp/" + file2;
    return socket.emit('runscript', str);
  };

  mkchart = function(container, array) {
    var a, b, i, j, len, len1, str;
    str = "<table class='table table-striped table-bordered'>";
    for (i = 0, len = array.length; i < len; i++) {
      a = array[i];
      str += "<tr>";
      for (j = 0, len1 = a.length; j < len1; j++) {
        b = a[j];
        str += "<td>" + b + "</td>";
      }
      str += "</tr>";
    }
    str += "</table>";
    return container.html(str);
  };

  renderfiletabdou = function(file, container) {
    var resp;
    resp = {
      filename: file,
      type: 'tabdou',
      container: container
    };
    return socket.emit('needfile', resp);
  };

  renderfiletab = function(file, container) {
    var resp;
    resp = {
      filename: file,
      type: 'tab',
      container: container
    };
    return socket.emit('needfile', resp);
  };

  split_tab_dou = function(str) {
    str = str.replace(/,/g, '\t');
    return split_tab(str);
  };

  split_tab_dou = function(str) {
    str = str.replace(/,/g, '\t');
    return split_tab(str);
  };

  split_tab = function(str) {
    var a, lines, res;
    lines = str.split('\n');
    res = [];
    for (a in lines) {
      res[a] = lines[a].split('\t');
    }
    return res;
  };

  socket.on('file', function(data) {
    var container, str;
    str = data['content'];
    container = data['container'];
    console.log(data['type']);
    if (data['type'] === 'tabdou') {
      return mkchart($("#" + container), split_tab_dou(str));
    } else if (data['type'] === 'tab') {
      mkchart($("#" + container), split_tab(str));
      return console.log('here');
    }
  });

  exports = this;

  exports.run00 = run00;

  exports.run01 = run01;

  exports.run1 = run1;

  exports.run2 = run2;

  exports.run3 = run3;

  exports.mkchart = mkchart;

  exports.renderfiletabdou = renderfiletabdou;

  exports.renderfiletab = renderfiletab;

}).call(this);
